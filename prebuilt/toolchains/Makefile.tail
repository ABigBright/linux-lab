# Core Makefile.lib

ifneq ($(CCURL),)

CCTAR = $(notdir $(CCURL))

ifeq ($(findstring .tar.xz, $(CCTAR)),.tar.xz)
  TAR_OPTS = Jxvf
endif

ifeq ($(findstring .tar.bz2, $(CCTAR)),.tar.bz2)
  TAR_OPTS = jxvf
endif

ifeq ($(findstring .tar.gz, $(CCTAR)),.tar.gz)
  TAR_OPTS = zxvf
endif

ifeq ($(findstring .tgz, $(CCTAR)),.tgz)
  TAR_OPTS = zxvf
endif

ifneq ($(CCBASE), $(wildcard $(CCBASE)))
all: download decompress

download:
	wget -c $(CCURL)

decompress:
	tar $(TAR_OPTS) $(CCTAR)
endif

endif # CCURL not empty

show:
	@echo
	@echo [ $(CCORI) $(CCVER) ]:
	@echo
	@echo Remote.: $(CCURL)
	@echo Local..: $(CCPATH)
	@echo Tool...: $(CCPRE)gcc
ifneq ($(CCBASE), $(wildcard $(CCBASE)))
	@echo Version: Not downloaded, please download it: make toolchain CCORI=$(CCORI)
else
	@echo Version: `/usr/bin/env PATH=$(CCPATH):$(PATH) $(CCPRE)gcc --version | head -1`
endif
ifeq ($(CCORI), internal)
	@echo More...: `/usr/bin/update-alternatives --list $(CCPRE)gcc`
endif

list:
	@$(foreach ccori, $(CCORI_LIST), make -s -C $(TOOLCHAIN)/ show CCORI=$(ccori);)

clean:
	rm -rf $(CCBASE)
